// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourBooking.Infrastructure.DBContext;

#nullable disable

namespace TourBooking.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220926200125_last333")]
    partial class last333
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TourBooking.Domain.Entities.Booking", b =>
                {
                    b.Property<Guid>("PartyLeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Currency")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<short>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("PartyLeaderId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            PartyLeaderId = new Guid("a1697955-bdc0-49f0-a704-08da73299f8d"),
                            BookingId = new Guid("d2fc8dea-e40c-4b09-805c-b19c99891f24"),
                            CreateDate = new DateTime(2020, 5, 9, 20, 11, 0, 0, DateTimeKind.Unspecified),
                            Currency = (short)8,
                            Name = "Andreas",
                            Price = 1500,
                            Status = (short)1
                        },
                        new
                        {
                            PartyLeaderId = new Guid("fb96e887-6582-4e75-d4da-08da7343ecea"),
                            BookingId = new Guid("d2fc8dea-e40c-4b05-805c-b19c97891f24"),
                            CreateDate = new DateTime(1990, 2, 1, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Currency = (short)7,
                            Name = "Darush",
                            Price = 1200,
                            Status = (short)1
                        },
                        new
                        {
                            PartyLeaderId = new Guid("d2fc8dea-e40c-4b09-805c-b19c99991f24"),
                            BookingId = new Guid("8ad8d11d-01e7-454d-a2c9-f4e94ea991cd"),
                            CreateDate = new DateTime(2020, 5, 9, 20, 11, 0, 0, DateTimeKind.Unspecified),
                            Currency = (short)2,
                            Name = "Kiristin",
                            Price = 800,
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("TourBooking.Domain.Entities.PartyLeader", b =>
                {
                    b.Property<Guid>("PartyLeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PartyLeaderId");

                    b.ToTable("PartyLeaders");

                    b.HasData(
                        new
                        {
                            PartyLeaderId = new Guid("a1697955-bdc0-49f0-a704-08da73299f8d"),
                            Name = "MoreHami"
                        },
                        new
                        {
                            PartyLeaderId = new Guid("fb96e887-6582-4e75-d4da-08da7343ecea"),
                            Name = "DigiKala"
                        },
                        new
                        {
                            PartyLeaderId = new Guid("d2fc8dea-e40c-4b09-805c-b19c99991f24"),
                            Name = "AliBaba"
                        },
                        new
                        {
                            PartyLeaderId = new Guid("5b8a57ee-b147-4f8c-b7e6-f8725119deb4"),
                            Name = "EliGasht"
                        });
                });

            modelBuilder.Entity("TourBooking.Domain.Entities.Station", b =>
                {
                    b.Property<string>("City")
                        .HasMaxLength(21)
                        .IsUnicode(false)
                        .HasColumnType("varchar(21)")
                        .HasColumnName("city");

                    b.Property<int?>("LatN")
                        .HasColumnType("int")
                        .HasColumnName("lat_n");

                    b.Property<int?>("LongW")
                        .HasColumnType("int")
                        .HasColumnName("long_w");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("state");

                    b.Property<Guid>("StationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StationId");

                    b.ToTable("Stations");
                });

            modelBuilder.Entity("TourBooking.Domain.Entities.Waitlist", b =>
                {
                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2")
                        .HasColumnName("created");

                    b.Property<string>("Firstname")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("firstname");

                    b.Property<string>("Lastname")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("lastname");

                    b.Property<string>("Listname")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("listname");

                    b.Property<Guid>("WaitlistId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Waitlistid");

                    b.ToTable("waitlist", (string)null);
                });

            modelBuilder.Entity("TourBooking.Domain.Entities.Booking", b =>
                {
                    b.HasOne("TourBooking.Domain.Entities.PartyLeader", "PartyLeader")
                        .WithMany("Bookings")
                        .HasForeignKey("PartyLeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartyLeader");
                });

            modelBuilder.Entity("TourBooking.Domain.Entities.PartyLeader", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
